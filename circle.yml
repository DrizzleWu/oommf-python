machine:
#  python:
#    version: 2.7.10

  environment:
    MINICONDA_ROOT: $HOME/miniconda
    PATH: $MINICONDA_ROOT/bin:$PATH
    OOMMF_PATH: /home/ubuntu/oommf-python/oommf/oommf
    OOMMF_TCL: oommf/oommf/oommf.tcl

dependencies:
  pre:
  # Note, we used to use the naive caching of docker images, but found that
  # it was quicker just to pull each time. #rollondockercaching
    - sudo apt-get update; sudo apt-get install tk8.6 tcl8.6 tcl8.6-dev tk8.6-dev
    - git clone https://github.com/fangohr/oommf.git && cd oommf && make 
    - export OOMMF_TK_CONFIG=/usr/lib/x86_64-linux-gnu/tk8.6/tkConfig.sh
    - export OOMMF_TCL_CONFIG=/usr/lib/x86_64-linux-gnu/tcl8.6/tclConfig.sh
    - alias oommf="tclsh ${OOMMF_TCL}/oommf.tcl"




  override:
    # Install conda and add it to PATH
    - wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    - bash miniconda.sh -b -p $MINICONDA_ROOT
    - hash -r

    # Update conda and and print info about the installation (for debugging)
    - conda config --set always_yes yes
    - conda update -q conda
    - conda info -a

    # Install OOMMF, SWIG and relevant Python packages
    - conda install cython pillow numpy cycler matplotlib pytest 
test:
  # This is not a real test suite; for the time being we simply print some info
  # about the OOMMF installation to see if conda installed it correctly.
  override:
    - pwd
    - ls
    - ls ${OOMMF_PATH}
    - echo $PATH
    - tclsh ${OOMMF_TCL} +version
    - echo "OOMMF installation succeeded."
    - py.test -v
