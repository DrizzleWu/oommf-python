* TODO [1/9]
1) [X] Small stuff [2/2]
   - [X] remove SWIG examples
   - [X] RP: Update doc/continuous-integration.md - is it still up to date?

2) [ ] Class diagrams [0/2]
   - [ ] Which classes are there in OOMMF
   - [ ] what should joommf look like?

3) [ ] Examples [0/1]
   - [ ] Write python file for each example (of course we have tests)

4) [-] Basic functionality [1/3]
   - [ ] read magnetisation from a file
   - [X] save magnetisation to a file
   - [ ] read/write arbitrary fields from an oommf run

5) [ ] Arbitrary Vector Fields
   - [ ] Can call Python from an arbitrary Tcl proc, so in theory can get more clever with
         the integration and allow non-Tcl scripts to run.
   - [ ] Otherwise, many examples of functions that already exist in examples - grep for 'Oxs_ScriptVectorField'

6) [ ] Alternative meshes
   - [ ] grep for variations on '*Atlas:' to find various examples e.g elipsoid
   - [ ] Along with this need to write code to support having different material
         parameters in different regions.

7) [-] Examples [2/5]
   - [X] Bigbar.mif - Save DataTable on every step
   - [X] Load data in Pandas
   - [ ] Bigbar.mif - Save magnetisation on every 5 steps
   - [ ] Load and visualise!
   - [ ] Monitor files as created (look at last line, if incomplete del., pass to pandas).

8) [ ] Installation
   - [ ] have requirements.txt file
   - [ ] include 'future' 0.15

9) [ ] Make it work on Windows
   - Test run:
     - Install Cygwin with tcl-tk, tcl-tk-devel, gcc-g++ (not sure which version, 
       could use minGW for native Windows - might be best choice if using Anaconda?
     - Can install anaconda locally, access with cygwin through /cygdrive/c/$PATHTOANACONDA
     - Need to export to keep in path.


